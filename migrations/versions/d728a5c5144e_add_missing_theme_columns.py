"""Add missing theme columns

Revision ID: d728a5c5144e
Revises: 36995f706428
Create Date: 2025-09-02 20:04:13.681537

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd728a5c5144e'
down_revision = '36995f706428'
branch_labels = None
depends_on = None


def upgrade():
    # Production-safe migration for adding theme columns
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    
    # Check if theme table exists
    table_names = inspector.get_table_names()
    if 'theme' not in table_names:
        print("Warning: theme table does not exist, skipping migration")
        return
    
    # Get existing columns
    existing_columns = [col['name'] for col in inspector.get_columns('theme')]
    
    with op.batch_alter_table('theme', schema=None) as batch_op:
        # Only add columns if they don't already exist
        if 'avatar_border_color' not in existing_columns:
            batch_op.add_column(sa.Column('avatar_border_color', sa.String(length=7), nullable=True, default='#ffffff'))
        
        if 'is_global' not in existing_columns:
            batch_op.add_column(sa.Column('is_global', sa.Boolean(), nullable=True, default=False))
        
        if 'created_by_id' not in existing_columns:
            batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
    
    # Add foreign key constraint if it doesn't exist
    existing_fks = [fk['name'] for fk in inspector.get_foreign_keys('theme')]
    if 'fk_theme_created_by_user' not in existing_fks:
        with op.batch_alter_table('theme', schema=None) as batch_op:
            batch_op.create_foreign_key('fk_theme_created_by_user', 'user', ['created_by_id'], ['id'])
    
    # Set default values for existing records
    if 'avatar_border_color' not in existing_columns:
        conn.execute(sa.text("UPDATE theme SET avatar_border_color = '#ffffff' WHERE avatar_border_color IS NULL"))
    
    if 'is_global' not in existing_columns:
        conn.execute(sa.text("UPDATE theme SET is_global = 1 WHERE is_global IS NULL"))  # Mark existing themes as global


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('theme', schema=None) as batch_op:
        batch_op.drop_constraint('fk_theme_created_by_user', type_='foreignkey')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('is_global')
        batch_op.drop_column('avatar_border_color')

    # ### end Alembic commands ###
